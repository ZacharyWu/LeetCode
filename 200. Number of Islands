class Solution {
public:
    int numIslands(vector<vector<char>>& grid) {
        if (grid.empty()) 
            return 0;
        //heigh
        int h = grid.size();
        int w = grid[0].size();
        int ans = 0;
        for (int x = 0; x < h; ++x){
            for (int y = 0; y < w; ++y){
                ans += grid[x][y] - '0';
                bfs(grid, x, y, w, h);
            }
        }     
        return ans;
    }
    
private:
    void bfs(vector<vector<char>>& grid, int x, int y, int w, int h){
        if (x < 0 || y < 0 || x >= h || y >= w || grid[x][y] == '0')
            return;
        grid[x][y] = '0';
        bfs(grid, x - 1, y, w, h);
        bfs(grid, x, y - 1, w, h);
        bfs(grid, x + 1, y, w, h);
        bfs(grid, x, y + 1, w, h);
    }
};

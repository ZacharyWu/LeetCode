class Solution {
public:
    bool exist(vector<vector<char>>& board, string word) {
        if(board.size()==0) return false;
        int h = board.size();
        int w = board[0].size();
        for (int i=0; i<h; ++i) {
            for (int j=0; j<w; ++j) {
                if (search(i,j,w,h,word,0,board)) return true;
            }
        }
        return false; 
    }
    
// private: 
    bool search(int x, int y, int w, int h, const string& word, int d, vector<vector<char>>& grid) {
        if (x<0 || y<0 || x==h || y==w) return false;
        if (word[d] != grid[x][y]) return false;
        if (d == word.size()-1) return true;
        else {
            char temp = grid[x][y]; 
            grid[x][y]=0; 
            bool found = 
                search (x+1, y, w, h, word, d+1, grid) ||
                search (x, y+1, w, h, word, d+1, grid) ||
                search (x-1, y, w, h, word, d+1, grid) ||
                search (x, y-1, w, h, word, d+1, grid);
            grid[x][y] = temp; 
            return found; 
        }
    } 
    
};
